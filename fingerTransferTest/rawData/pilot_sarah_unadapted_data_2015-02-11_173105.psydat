ccopy_reg
_reconstructor
p1
(cpsychopy.data
QuestHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'origin'
p6
Vfrom noiseStaircaseHelpers import printStaircase, toStaircase, outOfStaircase, plotDataAndPsychometricCurve\u000afrom fingerTransferTMAEfunctions import stim_set\u000afrom psychopy import data, visual, event, core\u000afrom math import ceil\u000aimport serial, csv, numpy, random, pylab, time\u000a\u000asetup = False\u000a\u000a# create/locate stimulus files\u000aexptFolder = r'./fingerTransferTest/'\u000aexptName = 'pilot'\u000acondition = 'unadapted'\u000aparticipant = 'sarah'\u000athreshCriterion = 0.5\u000astandardValue = 82 # should be a positive value; direction is randomised\u000aprefaceValues = [17,43,69,95,121,147] #comparison ISOIs that will be presented before the staircase\u000aprefaceStaircaseTrialsN = 120\u000astaircaseTrialsN=5\u000acomparisonValues = [17,21,26,30,34,39,43,47,52,56,60,65,69,73,78,82,87,91,95,100,104,108,113,117,\u000a                                121,126,130,134,139,143,147,152,156,160,165,169,174,178,182,187,191,195,200,204] \u000a                                #all possible ISOIs available to the staircase; be generous\u000a                                # both directions for each ISOI are automatically created in the stim_set() function\u000aif setup == True:\u000a    stim_set(presentationTime = 3000, stepDuration = [50,50],\u000a                        standard = standardValue, comparison = comparisonValues,\u000a                        exptFolder = exptFolder, exptName = exptName, nReps =1)\u000a    core.quit()\u000a\u000a# read in stimulus file information\u000astimFile = exptFolder+exptName+'_stimList.dlm'\u000awith open(stimFile) as file_object:\u000a    stimList = list(csv.DictReader(file_object, dialect='excel-tab'))\u000aisoiValues = []\u000ablockNs = []\u000astandardPositionValues = []\u000astandardISOIvalues = []\u000afor stim in stimList:\u000a    isoiValues += [float(stim['compISOI'])]\u000a    standardPositionValues += [stim['standardPosition']]\u000a    standardISOIvalues += [float(stim['stndISOI'])]\u000a    blockNs += [float(stim['blockNo_raw'])]\u000aisoiValues = numpy.array(isoiValues)\u000astandardPositionValues = numpy.array(standardPositionValues)\u000astandardISOIvalues = numpy.array(standardISOIvalues)\u000ablockNs = numpy.array(blockNs)\u000a\u000a# set up staircase\u000astaircase = data.QuestHandler(startVal = 82, \u000a                      startValSd = 20,\u000a                      stopInterval= None, #6, #sd of posterior has to be this small or smaller for staircase to stop, unless nTrials reached\u000a                      nTrials=staircaseTrialsN,\u000a                      #extraInfo = thisInfo,\u000a                      pThreshold = threshCriterion,\u000a                      gamma = 0, #y value at floor of the function, 0 for PSE type experiment\u000a                      delta=0.01, #lapse rate, I suppose for Weibull function fit\u000a                      grain = 4,\u000a                      range = 400, # if left at "None", seems to be set to 5, which is too small\u000a                      method = 'quantile', #uses the median of the posterior as the final answer\u000a                      stepType = 'lin',  #will home in on the 80% threshold. But stepType = 'log' doesn't usually work\u000a                      minVal=min(comparisonValues), maxVal = max(comparisonValues)\u000a                      )\u000a\u000aexpStop = False\u000adoingStaircasePhase = False #First phase of experiment is method of constant stimuli. If use naked QUEST, might converge too soon\u000a#prefaceStaircaseTrials = random.sample(prefaceValues, len(prefaceValues))\u000arespEachTrial = list() #only needed for initialNonstaircaseTrials\u000aoverallTrialN = -1\u000a\u000aprefaceStaircaseTrials = []\u000aprefaceTrials = data.TrialHandler( prefaceValues, nReps = ceil(prefaceStaircaseTrialsN/float(len(prefaceValues))) )\u000afor thisTrial in prefaceTrials:\u000a    prefaceStaircaseTrials += [thisTrial]\u000aprefaceStaircaseTrials = prefaceStaircaseTrials[0:prefaceStaircaseTrialsN]\u000a\u000astaircaseTrialN = -1; mainStaircaseGoing = False\u000a\u000a# define serial port to optacon computer\u000aoptacon=serial.Serial("/dev/tty.KeySerial1",9600,timeout=1)\u000aoptacon.read(100) #clear any existing messages\u000a\u000a# keypress labels\u000apedal = ['a','c']\u000aresponse = ['left','right']\u000aquitkeys = ['escape','esc']\u000a\u000a# define window that messages and light trigger appear in\u000awin = visual.Window(size=(1152, 870), fullscr=True, screen=1, allowGUI=False, allowStencil=False,\u000a    monitor='testMonitor', color=[-1,-1,-1], colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    )\u000a\u000a# define the patch of white screen to trigger the light sensor\u000atriggerPosition = [-11, 8]\u000atriggerSensorOn = visual.Rect(win=win, name='polygon',units='cm', \u000a    width=[1, 1][0], height=[1, 1][1],\u000a    ori=0, pos=triggerPosition,\u000a    lineWidth=1, lineColor=[1,1,1], lineColorSpace='rgb',\u000a    fillColor=[1,1,1], fillColorSpace='rgb',\u000a    opacity=1,interpolate=True)\u000a    \u000a# start message\u000amsg = visual.TextStim(win, text='Waiting for the experiment to start...\u005cn<esc> to quit')\u000amsg.draw()\u000awin.flip()\u000aoptaconStatus = ''\u000a# wait until optacon protocol has been started\u000awhile not optaconStatus == 'READY':\u000a    optaconStatus = optacon.read(size=5)\u000a    print optaconStatus\u000a    keyPressed = event.getKeys(keyList=quitkeys)\u000a    if any(keyPressed):\u000a        print 'user aborted'\u000a        core.quit()\u000a            \u000a\u000a#data file\u000adataFileName = exptName+'_'+participant+'_'+condition+'_data_'+time.strftime('%Y-%m-%d_%H%M%S')\u000adataFile = open(exptFolder+'rawData/'+dataFileName+'.txt', 'w')\u000adataFile.write('ISOI\u005ctresponse\u005ctthreshold\u005ctdirection\u005ctstndPosition\u005cn')\u000a\u000awhile (not staircase.finished) and expStop==False:\u000a    \u000a    # first select the comparison ISOI for this trial, either from preface values or QUEST\u000a    if overallTrialN+1 < len(prefaceStaircaseTrials): #if still doing prefaceStaircaseTrials\u000a        overallTrialN += 1\u000a        suggestedISOI = prefaceStaircaseTrials[overallTrialN]\u000a    else: #QUEST trials\u000a        if overallTrialN+1 == len(prefaceStaircaseTrials): \u000a            #add these preface trials so QUEST knows about them\u000a            print('Importing ',respEachTrial,' and intensities ',repr(prefaceStaircaseTrials))\u000a            staircase.importData( prefaceStaircaseTrials, numpy.array(respEachTrial)) \u000a        try: #advance the staircase\u000a            suggestedISOI = staircase.next() #staircase suggests the next value\u000a            print '\u005cnSuggested value = '+str(suggestedISOI)\u000a            overallTrialN += 1\u000a        except StopIteration: #Need this here, even though test for finished above. I can't understand why finished test doesn't accomplish this.\u000a            print('\u005cn\u005cnStopping because staircase.next() returned a StopIteration, which it does when it is finished')\u000a            staircase.finished = True\u000a            break #break out of the trials loop\u000a    \u000a    direction = random.sample([-1,1],1)[0]\u000a    staircase.addOtherData('direction', direction)\u000a    \u000a    #closest value to the suggested one that we have\u000a    comparisonISOI = isoiValues[min(abs(suggestedISOI - isoiValues)) == abs(suggestedISOI - isoiValues)][0]\u000a    \u000a    standardISOI = standardValue*direction\u000a    standardPosition = random.sample(['left','right'],1)[0]\u000a    staircase.addOtherData('standardPosition', standardPosition)\u000a    \u000a    #find the block number for the stimulus\u000a    iClosest = [i for i in range(len(isoiValues)) if \u000a            isoiValues[i] == comparisonISOI*direction and \u000a            standardISOIvalues[i] == standardISOI and\u000a            standardPositionValues[i] == standardPosition]\u000a    blockNo = int(blockNs[iClosest][0])\u000a    print '\u005cnoverallTrialN='+str(overallTrialN)+ '   comparison ISOI for this trial = '+ str(round(comparisonISOI,2))+"    Block number: "+str(blockNo)\u000a    \u000a    keyPressed = ['']\u000a    \u000a    # tell optacon what the next stimulus is\u000a    msg = visual.TextStim(win, text='Loading next stimulus...')\u000a    msg.draw()\u000a    win.flip()\u000a    optacon.write("b"+str(blockNo))\u000a    \u000a    # wait until optacon confirms next stimulus was received\u000a    while not any(keyPressed) and not optaconStatus == "OK":\u000a        optaconStatus = optacon.read(size=2)\u000a        print optaconStatus\u000a        keyPressed = event.getKeys(keyList=quitkeys)\u000a    if any(keyPressed):\u000a        print 'user aborted'\u000a        expStop=True\u000a        break\u000a        \u000a    if expStop == False:\u000a        # use light to trigger stimulus presentation\u000a        core.wait(1.2)\u000a        msg = visual.TextStim(win, text='\u005cn<esc> to quit')\u000a        msg.draw()\u000a        triggerSensorOn.setAutoDraw(True)\u000a        triggerClockOn = core.Clock()\u000a        while triggerClockOn.getTime()<0.01:\u000a            win.flip()\u000a        print 'stimulus triggered'\u000a        triggerSensorOn.setAutoDraw(False)\u000a        win.flip()\u000a        \u000a        # wait until optacon has finished presenting the stimulus\u000a        while not optaconStatus == 'READY':\u000a            optaconStatus = optacon.read(size=5)\u000a            print optaconStatus\u000a            keyPressed = event.getKeys(keyList=quitkeys)\u000a            if any(keyPressed):\u000a                print 'user aborted'\u000a                expStop=True\u000a                break\u000a        \u000a    if expStop == False:\u000a        # prompt user to make a response\u000a        msg = visual.TextStim(win, text='Which stimulus feels more proximal (less distal)?\u005cnLEFT / RIGHT\u005cn\u005cn\u005cn'+\u000a                                                                str(overallTrialN+1)+' of '+str(prefaceStaircaseTrialsN+staircaseTrialsN))\u000a        msg.draw()\u000a        win.flip()\u000a        while not any(keyPressed):\u000a            keyPressed = event.waitKeys(keyList=pedal+quitkeys)\u000a        if keyPressed[0] in quitkeys:\u000a            print 'user aborted'\u000a            expStop = True\u000a        msg = visual.TextStim(win, text='\u005cn<esc> to quit')\u000a        msg.draw()\u000a        win.flip()\u000a        \u000a    if expStop == False:\u000a        # label the response\u000a        thisPedal = response[pedal.index(keyPressed[0])]\u000a        if (thisPedal == standardPosition and direction == 1) or (thisPedal != standardPosition and direction == -1):\u000a            thisResp = 0\u000a        else:\u000a            thisResp = 1\u000a        print 'pedal pressed: '+str(thisPedal)+', standard location: '+standardPosition+'; direction: '+str(direction)\u000a    \u000a        # record the response and the ISOI used\u000a        respEachTrial.append(thisResp)\u000a        if overallTrialN >= len(prefaceStaircaseTrials): #if doing staircase trials now\u000a            staircase.addResponse(thisResp, intensity = comparisonISOI)\u000a            print 'Have added an intensity of ' + str(comparisonISOI)\u000a\u000aif overallTrialN+1 < len(prefaceStaircaseTrials) and (overallTrialN>=0): #exp stopped before got through staircase preface trials\u000a    #add these non-staircase trials so QUEST knows about them\u000a    print 'Importing '+str(respEachTrial)+' and intensities '+str(prefaceStaircaseTrials[0:len(respEachTrial)])+'\u005cn\u005cn'\u000a    staircase.importData( toStaircase(prefaceStaircaseTrials[0:len(respEachTrial)],False), numpy.array(respEachTrial)) \u000aprint 'Finished experiment.'\u000a\u000aif staircase.finished:\u000a    print 'Staircase completed.'\u000aelse:\u000a    print 'Staircase did not complete.'\u000a\u000aprint('Median of posterior distribution according to QUEST, ISOI= {:.4f}'.format(staircase.quantile())) \u000a\u000a# save data\u000astaircase.saveAsPickle(exptFolder+'rawData/'+dataFileName)\u000afor i in range(len(staircase.intensities)):\u000a    dataFile.write( '%f\u005ct%i\u005ct%f\u005ct%i\u005ct%s\u005cn' %(staircase.intensities[i], staircase.data[i], staircase.quantile(), \u000a                                                        staircase.otherData['direction'][i], staircase.otherData['standardPosition'][i]) )\u000adataFile.write('\u005cn')\u000adataFile.close()\u000aprint 'created file in folder \u005c"'+exptFolder+'rawData/\u005c":\u005cn'+dataFileName+'.txt\u005cn'\u000a\u000aprintStaircase(staircase, False, briefTrialUpdate=False, printInternalVal=False,  alsoLog=False)\u000a\u000amsg = visual.TextStim(win, text='The experiment is finished.\u005cnPress <esc> to quit.')\u000amsg.draw()\u000awin.flip()\u000awhile keyPressed[0] not in quitkeys:\u000a    keyPressed = event.waitKeys()\u000awin.close()\u000a\u000a#fit curve\u000a#fit = None\u000a#try: \u000a#    fit = data.FitWeibull(staircase.intensities, staircase.data, expectedMin=0,  sems = 1.0/len(staircase.intensities))\u000a#except:\u000a#    print("Fit failed.")\u000a\u000a#plotDataAndPsychometricCurve(staircase,fit,False,threshCriterion)\u000a# save figure to file\u000a#outputFile =  exptFolder+exptName+'_plot'\u000a#pylab.savefig(outputFile + '.pdf')\u000a#pylab.savefig(outputFile + '.jpg')\u000a#pylab.show() #must call this to actually show plot\u000a
p7
sS'_quest'
p8
(ipsychopy.contrib.quest
QuestObject
p9
(dp10
S'p2'
p11
cnumpy.core.multiarray
_reconstruct
p12
(cnumpy
ndarray
p13
(I0
tS'b'
tRp14
(I1
(I201
tcnumpy
dtype
p15
(S'f8'
I0
I1
tRp16
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x87@\xe1\xe9\xdaX?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?'
tbsS'warnPdf'
p17
I01
sS'quantileOrder'
p18
cnumpy.core.multiarray
scalar
p19
(g16
S'\\z\r+\xc5h\xdf?'
tRp20
sS'normalizePdf'
p21
I00
sS'intensity'
p22
(lp23
g19
(g15
(S'i4'
I0
I1
tRp24
(I3
S'<'
NNNI-1
I-1
I0
tbS'E\x00\x00\x00'
tRp25
ag19
(g24
S'+\x00\x00\x00'
tRp26
ag19
(g24
S'y\x00\x00\x00'
tRp27
ag19
(g24
S'\x11\x00\x00\x00'
tRp28
ag19
(g24
S'_\x00\x00\x00'
tRp29
ag19
(g24
S'\x93\x00\x00\x00'
tRp30
ag19
(g24
S'+\x00\x00\x00'
tRp31
ag19
(g24
S'\x11\x00\x00\x00'
tRp32
ag19
(g24
S'y\x00\x00\x00'
tRp33
ag19
(g24
S'\x93\x00\x00\x00'
tRp34
ag19
(g24
S'_\x00\x00\x00'
tRp35
ag19
(g24
S'E\x00\x00\x00'
tRp36
ag19
(g24
S'\x11\x00\x00\x00'
tRp37
ag19
(g24
S'_\x00\x00\x00'
tRp38
ag19
(g24
S'y\x00\x00\x00'
tRp39
ag19
(g24
S'\x93\x00\x00\x00'
tRp40
ag19
(g24
S'E\x00\x00\x00'
tRp41
ag19
(g24
S'+\x00\x00\x00'
tRp42
ag19
(g24
S'y\x00\x00\x00'
tRp43
ag19
(g24
S'+\x00\x00\x00'
tRp44
ag19
(g24
S'E\x00\x00\x00'
tRp45
ag19
(g24
S'_\x00\x00\x00'
tRp46
ag19
(g24
S'\x11\x00\x00\x00'
tRp47
ag19
(g24
S'\x93\x00\x00\x00'
tRp48
ag19
(g24
S'y\x00\x00\x00'
tRp49
ag19
(g24
S'_\x00\x00\x00'
tRp50
ag19
(g24
S'+\x00\x00\x00'
tRp51
ag19
(g24
S'\x11\x00\x00\x00'
tRp52
ag19
(g24
S'\x93\x00\x00\x00'
tRp53
ag19
(g24
S'E\x00\x00\x00'
tRp54
ag19
(g24
S'+\x00\x00\x00'
tRp55
ag19
(g24
S'y\x00\x00\x00'
tRp56
ag19
(g24
S'_\x00\x00\x00'
tRp57
ag19
(g24
S'E\x00\x00\x00'
tRp58
ag19
(g24
S'\x93\x00\x00\x00'
tRp59
ag19
(g24
S'\x11\x00\x00\x00'
tRp60
ag19
(g24
S'+\x00\x00\x00'
tRp61
ag19
(g24
S'\x93\x00\x00\x00'
tRp62
ag19
(g24
S'y\x00\x00\x00'
tRp63
ag19
(g24
S'\x11\x00\x00\x00'
tRp64
ag19
(g24
S'E\x00\x00\x00'
tRp65
ag19
(g24
S'_\x00\x00\x00'
tRp66
ag19
(g24
S'_\x00\x00\x00'
tRp67
ag19
(g24
S'\x11\x00\x00\x00'
tRp68
ag19
(g24
S'\x93\x00\x00\x00'
tRp69
ag19
(g24
S'y\x00\x00\x00'
tRp70
ag19
(g24
S'E\x00\x00\x00'
tRp71
ag19
(g24
S'+\x00\x00\x00'
tRp72
ag19
(g24
S'+\x00\x00\x00'
tRp73
ag19
(g24
S'y\x00\x00\x00'
tRp74
ag19
(g24
S'_\x00\x00\x00'
tRp75
ag19
(g24
S'\x11\x00\x00\x00'
tRp76
ag19
(g24
S'\x93\x00\x00\x00'
tRp77
ag19
(g24
S'E\x00\x00\x00'
tRp78
ag19
(g24
S'+\x00\x00\x00'
tRp79
ag19
(g24
S'_\x00\x00\x00'
tRp80
ag19
(g24
S'E\x00\x00\x00'
tRp81
ag19
(g24
S'\x11\x00\x00\x00'
tRp82
ag19
(g24
S'\x93\x00\x00\x00'
tRp83
ag19
(g24
S'y\x00\x00\x00'
tRp84
ag19
(g24
S'+\x00\x00\x00'
tRp85
ag19
(g24
S'\x93\x00\x00\x00'
tRp86
ag19
(g24
S'y\x00\x00\x00'
tRp87
ag19
(g24
S'\x11\x00\x00\x00'
tRp88
ag19
(g24
S'_\x00\x00\x00'
tRp89
ag19
(g24
S'E\x00\x00\x00'
tRp90
ag19
(g24
S'y\x00\x00\x00'
tRp91
ag19
(g24
S'_\x00\x00\x00'
tRp92
ag19
(g24
S'+\x00\x00\x00'
tRp93
ag19
(g24
S'\x93\x00\x00\x00'
tRp94
ag19
(g24
S'E\x00\x00\x00'
tRp95
ag19
(g24
S'\x11\x00\x00\x00'
tRp96
ag19
(g24
S'_\x00\x00\x00'
tRp97
ag19
(g24
S'y\x00\x00\x00'
tRp98
ag19
(g24
S'\x11\x00\x00\x00'
tRp99
ag19
(g24
S'\x93\x00\x00\x00'
tRp100
ag19
(g24
S'+\x00\x00\x00'
tRp101
ag19
(g24
S'E\x00\x00\x00'
tRp102
ag19
(g24
S'\x93\x00\x00\x00'
tRp103
ag19
(g24
S'y\x00\x00\x00'
tRp104
ag19
(g24
S'\x11\x00\x00\x00'
tRp105
ag19
(g24
S'E\x00\x00\x00'
tRp106
ag19
(g24
S'_\x00\x00\x00'
tRp107
ag19
(g24
S'+\x00\x00\x00'
tRp108
ag19
(g24
S'_\x00\x00\x00'
tRp109
ag19
(g24
S'\x11\x00\x00\x00'
tRp110
ag19
(g24
S'y\x00\x00\x00'
tRp111
ag19
(g24
S'\x93\x00\x00\x00'
tRp112
ag19
(g24
S'E\x00\x00\x00'
tRp113
ag19
(g24
S'+\x00\x00\x00'
tRp114
ag19
(g24
S'\x11\x00\x00\x00'
tRp115
ag19
(g24
S'y\x00\x00\x00'
tRp116
ag19
(g24
S'E\x00\x00\x00'
tRp117
ag19
(g24
S'_\x00\x00\x00'
tRp118
ag19
(g24
S'+\x00\x00\x00'
tRp119
ag19
(g24
S'\x93\x00\x00\x00'
tRp120
ag19
(g24
S'\x93\x00\x00\x00'
tRp121
ag19
(g24
S'E\x00\x00\x00'
tRp122
asS'dim'
p123
F100
sS'i'
g12
(g13
(I0
tS'b'
tRp124
(I1
(I101
tg16
I00
S'\x00\x00\x00\x00\x00\x00I\xc0\x00\x00\x00\x00\x00\x80H\xc0\x00\x00\x00\x00\x00\x00H\xc0\x00\x00\x00\x00\x00\x80G\xc0\x00\x00\x00\x00\x00\x00G\xc0\x00\x00\x00\x00\x00\x80F\xc0\x00\x00\x00\x00\x00\x00F\xc0\x00\x00\x00\x00\x00\x80E\xc0\x00\x00\x00\x00\x00\x00E\xc0\x00\x00\x00\x00\x00\x80D\xc0\x00\x00\x00\x00\x00\x00D\xc0\x00\x00\x00\x00\x00\x80C\xc0\x00\x00\x00\x00\x00\x00C\xc0\x00\x00\x00\x00\x00\x80B\xc0\x00\x00\x00\x00\x00\x00B\xc0\x00\x00\x00\x00\x00\x80A\xc0\x00\x00\x00\x00\x00\x00A\xc0\x00\x00\x00\x00\x00\x80@\xc0\x00\x00\x00\x00\x00\x00@\xc0\x00\x00\x00\x00\x00\x00?\xc0\x00\x00\x00\x00\x00\x00>\xc0\x00\x00\x00\x00\x00\x00=\xc0\x00\x00\x00\x00\x00\x00<\xc0\x00\x00\x00\x00\x00\x00;\xc0\x00\x00\x00\x00\x00\x00:\xc0\x00\x00\x00\x00\x00\x009\xc0\x00\x00\x00\x00\x00\x008\xc0\x00\x00\x00\x00\x00\x007\xc0\x00\x00\x00\x00\x00\x006\xc0\x00\x00\x00\x00\x00\x005\xc0\x00\x00\x00\x00\x00\x004\xc0\x00\x00\x00\x00\x00\x003\xc0\x00\x00\x00\x00\x00\x002\xc0\x00\x00\x00\x00\x00\x001\xc0\x00\x00\x00\x00\x00\x000\xc0\x00\x00\x00\x00\x00\x00.\xc0\x00\x00\x00\x00\x00\x00,\xc0\x00\x00\x00\x00\x00\x00*\xc0\x00\x00\x00\x00\x00\x00(\xc0\x00\x00\x00\x00\x00\x00&\xc0\x00\x00\x00\x00\x00\x00$\xc0\x00\x00\x00\x00\x00\x00"\xc0\x00\x00\x00\x00\x00\x00 \xc0\x00\x00\x00\x00\x00\x00\x1c\xc0\x00\x00\x00\x00\x00\x00\x18\xc0\x00\x00\x00\x00\x00\x00\x14\xc0\x00\x00\x00\x00\x00\x00\x10\xc0\x00\x00\x00\x00\x00\x00\x08\xc0\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\xf0\xbf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x08@\x00\x00\x00\x00\x00\x00\x10@\x00\x00\x00\x00\x00\x00\x14@\x00\x00\x00\x00\x00\x00\x18@\x00\x00\x00\x00\x00\x00\x1c@\x00\x00\x00\x00\x00\x00 @\x00\x00\x00\x00\x00\x00"@\x00\x00\x00\x00\x00\x00$@\x00\x00\x00\x00\x00\x00&@\x00\x00\x00\x00\x00\x00(@\x00\x00\x00\x00\x00\x00*@\x00\x00\x00\x00\x00\x00,@\x00\x00\x00\x00\x00\x00.@\x00\x00\x00\x00\x00\x000@\x00\x00\x00\x00\x00\x001@\x00\x00\x00\x00\x00\x002@\x00\x00\x00\x00\x00\x003@\x00\x00\x00\x00\x00\x004@\x00\x00\x00\x00\x00\x005@\x00\x00\x00\x00\x00\x006@\x00\x00\x00\x00\x00\x007@\x00\x00\x00\x00\x00\x008@\x00\x00\x00\x00\x00\x009@\x00\x00\x00\x00\x00\x00:@\x00\x00\x00\x00\x00\x00;@\x00\x00\x00\x00\x00\x00<@\x00\x00\x00\x00\x00\x00=@\x00\x00\x00\x00\x00\x00>@\x00\x00\x00\x00\x00\x00?@\x00\x00\x00\x00\x00\x00@@\x00\x00\x00\x00\x00\x80@@\x00\x00\x00\x00\x00\x00A@\x00\x00\x00\x00\x00\x80A@\x00\x00\x00\x00\x00\x00B@\x00\x00\x00\x00\x00\x80B@\x00\x00\x00\x00\x00\x00C@\x00\x00\x00\x00\x00\x80C@\x00\x00\x00\x00\x00\x00D@\x00\x00\x00\x00\x00\x80D@\x00\x00\x00\x00\x00\x00E@\x00\x00\x00\x00\x00\x80E@\x00\x00\x00\x00\x00\x00F@\x00\x00\x00\x00\x00\x80F@\x00\x00\x00\x00\x00\x00G@\x00\x00\x00\x00\x00\x80G@\x00\x00\x00\x00\x00\x00H@\x00\x00\x00\x00\x00\x80H@\x00\x00\x00\x00\x00\x00I@'
tbsS's2'
p125
g12
(g13
(I0
tS'b'
tRp126
(I1
(I2
I201
tg16
I00
S'\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\x80\x14\xaeG\xe1z\x84?\xbc_\x0f\x8b\x92\xf3\xef?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\x00\x00\x00\x00\x00\x00\xf0?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xaeG\xe1z\x14\xae\xef?\xa4\x87@\xe1\xe9\xdaX?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
tbsS'updatePdf'
p127
I01
sS'pThreshold'
p128
F0.5
sS'tGuess'
p129
I82
sS'beta'
p130
F3.5
sS'xThreshold'
p131
g19
(g16
S'X\xf0q\xa0\x15\xbb\xe9\xbf'
tRp132
sS'grain'
p133
F4
sS'delta'
p134
F0.01
sS'x2'
p135
g12
(g13
(I0
tS'b'
tRp136
(I1
(I201
tg16
I00
S'\x00\x00\x00\x00\x00\x00y\xc0\x00\x00\x00\x00\x00\xc0x\xc0\x00\x00\x00\x00\x00\x80x\xc0\x00\x00\x00\x00\x00@x\xc0\x00\x00\x00\x00\x00\x00x\xc0\x00\x00\x00\x00\x00\xc0w\xc0\x00\x00\x00\x00\x00\x80w\xc0\x00\x00\x00\x00\x00@w\xc0\x00\x00\x00\x00\x00\x00w\xc0\x00\x00\x00\x00\x00\xc0v\xc0\x00\x00\x00\x00\x00\x80v\xc0\x00\x00\x00\x00\x00@v\xc0\x00\x00\x00\x00\x00\x00v\xc0\x00\x00\x00\x00\x00\xc0u\xc0\x00\x00\x00\x00\x00\x80u\xc0\x00\x00\x00\x00\x00@u\xc0\x00\x00\x00\x00\x00\x00u\xc0\x00\x00\x00\x00\x00\xc0t\xc0\x00\x00\x00\x00\x00\x80t\xc0\x00\x00\x00\x00\x00@t\xc0\x00\x00\x00\x00\x00\x00t\xc0\x00\x00\x00\x00\x00\xc0s\xc0\x00\x00\x00\x00\x00\x80s\xc0\x00\x00\x00\x00\x00@s\xc0\x00\x00\x00\x00\x00\x00s\xc0\x00\x00\x00\x00\x00\xc0r\xc0\x00\x00\x00\x00\x00\x80r\xc0\x00\x00\x00\x00\x00@r\xc0\x00\x00\x00\x00\x00\x00r\xc0\x00\x00\x00\x00\x00\xc0q\xc0\x00\x00\x00\x00\x00\x80q\xc0\x00\x00\x00\x00\x00@q\xc0\x00\x00\x00\x00\x00\x00q\xc0\x00\x00\x00\x00\x00\xc0p\xc0\x00\x00\x00\x00\x00\x80p\xc0\x00\x00\x00\x00\x00@p\xc0\x00\x00\x00\x00\x00\x00p\xc0\x00\x00\x00\x00\x00\x80o\xc0\x00\x00\x00\x00\x00\x00o\xc0\x00\x00\x00\x00\x00\x80n\xc0\x00\x00\x00\x00\x00\x00n\xc0\x00\x00\x00\x00\x00\x80m\xc0\x00\x00\x00\x00\x00\x00m\xc0\x00\x00\x00\x00\x00\x80l\xc0\x00\x00\x00\x00\x00\x00l\xc0\x00\x00\x00\x00\x00\x80k\xc0\x00\x00\x00\x00\x00\x00k\xc0\x00\x00\x00\x00\x00\x80j\xc0\x00\x00\x00\x00\x00\x00j\xc0\x00\x00\x00\x00\x00\x80i\xc0\x00\x00\x00\x00\x00\x00i\xc0\x00\x00\x00\x00\x00\x80h\xc0\x00\x00\x00\x00\x00\x00h\xc0\x00\x00\x00\x00\x00\x80g\xc0\x00\x00\x00\x00\x00\x00g\xc0\x00\x00\x00\x00\x00\x80f\xc0\x00\x00\x00\x00\x00\x00f\xc0\x00\x00\x00\x00\x00\x80e\xc0\x00\x00\x00\x00\x00\x00e\xc0\x00\x00\x00\x00\x00\x80d\xc0\x00\x00\x00\x00\x00\x00d\xc0\x00\x00\x00\x00\x00\x80c\xc0\x00\x00\x00\x00\x00\x00c\xc0\x00\x00\x00\x00\x00\x80b\xc0\x00\x00\x00\x00\x00\x00b\xc0\x00\x00\x00\x00\x00\x80a\xc0\x00\x00\x00\x00\x00\x00a\xc0\x00\x00\x00\x00\x00\x80`\xc0\x00\x00\x00\x00\x00\x00`\xc0\x00\x00\x00\x00\x00\x00_\xc0\x00\x00\x00\x00\x00\x00^\xc0\x00\x00\x00\x00\x00\x00]\xc0\x00\x00\x00\x00\x00\x00\\\xc0\x00\x00\x00\x00\x00\x00[\xc0\x00\x00\x00\x00\x00\x00Z\xc0\x00\x00\x00\x00\x00\x00Y\xc0\x00\x00\x00\x00\x00\x00X\xc0\x00\x00\x00\x00\x00\x00W\xc0\x00\x00\x00\x00\x00\x00V\xc0\x00\x00\x00\x00\x00\x00U\xc0\x00\x00\x00\x00\x00\x00T\xc0\x00\x00\x00\x00\x00\x00S\xc0\x00\x00\x00\x00\x00\x00R\xc0\x00\x00\x00\x00\x00\x00Q\xc0\x00\x00\x00\x00\x00\x00P\xc0\x00\x00\x00\x00\x00\x00N\xc0\x00\x00\x00\x00\x00\x00L\xc0\x00\x00\x00\x00\x00\x00J\xc0\x00\x00\x00\x00\x00\x00H\xc0\x00\x00\x00\x00\x00\x00F\xc0\x00\x00\x00\x00\x00\x00D\xc0\x00\x00\x00\x00\x00\x00B\xc0\x00\x00\x00\x00\x00\x00@\xc0\x00\x00\x00\x00\x00\x00<\xc0\x00\x00\x00\x00\x00\x008\xc0\x00\x00\x00\x00\x00\x004\xc0\x00\x00\x00\x00\x00\x000\xc0\x00\x00\x00\x00\x00\x00(\xc0\x00\x00\x00\x00\x00\x00 \xc0\x00\x00\x00\x00\x00\x00\x10\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10@\x00\x00\x00\x00\x00\x00 @\x00\x00\x00\x00\x00\x00(@\x00\x00\x00\x00\x00\x000@\x00\x00\x00\x00\x00\x004@\x00\x00\x00\x00\x00\x008@\x00\x00\x00\x00\x00\x00<@\x00\x00\x00\x00\x00\x00@@\x00\x00\x00\x00\x00\x00B@\x00\x00\x00\x00\x00\x00D@\x00\x00\x00\x00\x00\x00F@\x00\x00\x00\x00\x00\x00H@\x00\x00\x00\x00\x00\x00J@\x00\x00\x00\x00\x00\x00L@\x00\x00\x00\x00\x00\x00N@\x00\x00\x00\x00\x00\x00P@\x00\x00\x00\x00\x00\x00Q@\x00\x00\x00\x00\x00\x00R@\x00\x00\x00\x00\x00\x00S@\x00\x00\x00\x00\x00\x00T@\x00\x00\x00\x00\x00\x00U@\x00\x00\x00\x00\x00\x00V@\x00\x00\x00\x00\x00\x00W@\x00\x00\x00\x00\x00\x00X@\x00\x00\x00\x00\x00\x00Y@\x00\x00\x00\x00\x00\x00Z@\x00\x00\x00\x00\x00\x00[@\x00\x00\x00\x00\x00\x00\\@\x00\x00\x00\x00\x00\x00]@\x00\x00\x00\x00\x00\x00^@\x00\x00\x00\x00\x00\x00_@\x00\x00\x00\x00\x00\x00`@\x00\x00\x00\x00\x00\x80`@\x00\x00\x00\x00\x00\x00a@\x00\x00\x00\x00\x00\x80a@\x00\x00\x00\x00\x00\x00b@\x00\x00\x00\x00\x00\x80b@\x00\x00\x00\x00\x00\x00c@\x00\x00\x00\x00\x00\x80c@\x00\x00\x00\x00\x00\x00d@\x00\x00\x00\x00\x00\x80d@\x00\x00\x00\x00\x00\x00e@\x00\x00\x00\x00\x00\x80e@\x00\x00\x00\x00\x00\x00f@\x00\x00\x00\x00\x00\x80f@\x00\x00\x00\x00\x00\x00g@\x00\x00\x00\x00\x00\x80g@\x00\x00\x00\x00\x00\x00h@\x00\x00\x00\x00\x00\x80h@\x00\x00\x00\x00\x00\x00i@\x00\x00\x00\x00\x00\x80i@\x00\x00\x00\x00\x00\x00j@\x00\x00\x00\x00\x00\x80j@\x00\x00\x00\x00\x00\x00k@\x00\x00\x00\x00\x00\x80k@\x00\x00\x00\x00\x00\x00l@\x00\x00\x00\x00\x00\x80l@\x00\x00\x00\x00\x00\x00m@\x00\x00\x00\x00\x00\x80m@\x00\x00\x00\x00\x00\x00n@\x00\x00\x00\x00\x00\x80n@\x00\x00\x00\x00\x00\x00o@\x00\x00\x00\x00\x00\x80o@\x00\x00\x00\x00\x00\x00p@\x00\x00\x00\x00\x00@p@\x00\x00\x00\x00\x00\x80p@\x00\x00\x00\x00\x00\xc0p@\x00\x00\x00\x00\x00\x00q@\x00\x00\x00\x00\x00@q@\x00\x00\x00\x00\x00\x80q@\x00\x00\x00\x00\x00\xc0q@\x00\x00\x00\x00\x00\x00r@\x00\x00\x00\x00\x00@r@\x00\x00\x00\x00\x00\x80r@\x00\x00\x00\x00\x00\xc0r@\x00\x00\x00\x00\x00\x00s@\x00\x00\x00\x00\x00@s@\x00\x00\x00\x00\x00\x80s@\x00\x00\x00\x00\x00\xc0s@\x00\x00\x00\x00\x00\x00t@\x00\x00\x00\x00\x00@t@\x00\x00\x00\x00\x00\x80t@\x00\x00\x00\x00\x00\xc0t@\x00\x00\x00\x00\x00\x00u@\x00\x00\x00\x00\x00@u@\x00\x00\x00\x00\x00\x80u@\x00\x00\x00\x00\x00\xc0u@\x00\x00\x00\x00\x00\x00v@\x00\x00\x00\x00\x00@v@\x00\x00\x00\x00\x00\x80v@\x00\x00\x00\x00\x00\xc0v@\x00\x00\x00\x00\x00\x00w@\x00\x00\x00\x00\x00@w@\x00\x00\x00\x00\x00\x80w@\x00\x00\x00\x00\x00\xc0w@\x00\x00\x00\x00\x00\x00x@\x00\x00\x00\x00\x00@x@\x00\x00\x00\x00\x00\x80x@\x00\x00\x00\x00\x00\xc0x@\x00\x00\x00\x00\x00\x00y@'
tbsS'x'
g12
(g13
(I0
tS'b'
tRp137
(I1
(I101
tg16
I00
S'\x00\x00\x00\x00\x00\x00i\xc0\x00\x00\x00\x00\x00\x80h\xc0\x00\x00\x00\x00\x00\x00h\xc0\x00\x00\x00\x00\x00\x80g\xc0\x00\x00\x00\x00\x00\x00g\xc0\x00\x00\x00\x00\x00\x80f\xc0\x00\x00\x00\x00\x00\x00f\xc0\x00\x00\x00\x00\x00\x80e\xc0\x00\x00\x00\x00\x00\x00e\xc0\x00\x00\x00\x00\x00\x80d\xc0\x00\x00\x00\x00\x00\x00d\xc0\x00\x00\x00\x00\x00\x80c\xc0\x00\x00\x00\x00\x00\x00c\xc0\x00\x00\x00\x00\x00\x80b\xc0\x00\x00\x00\x00\x00\x00b\xc0\x00\x00\x00\x00\x00\x80a\xc0\x00\x00\x00\x00\x00\x00a\xc0\x00\x00\x00\x00\x00\x80`\xc0\x00\x00\x00\x00\x00\x00`\xc0\x00\x00\x00\x00\x00\x00_\xc0\x00\x00\x00\x00\x00\x00^\xc0\x00\x00\x00\x00\x00\x00]\xc0\x00\x00\x00\x00\x00\x00\\\xc0\x00\x00\x00\x00\x00\x00[\xc0\x00\x00\x00\x00\x00\x00Z\xc0\x00\x00\x00\x00\x00\x00Y\xc0\x00\x00\x00\x00\x00\x00X\xc0\x00\x00\x00\x00\x00\x00W\xc0\x00\x00\x00\x00\x00\x00V\xc0\x00\x00\x00\x00\x00\x00U\xc0\x00\x00\x00\x00\x00\x00T\xc0\x00\x00\x00\x00\x00\x00S\xc0\x00\x00\x00\x00\x00\x00R\xc0\x00\x00\x00\x00\x00\x00Q\xc0\x00\x00\x00\x00\x00\x00P\xc0\x00\x00\x00\x00\x00\x00N\xc0\x00\x00\x00\x00\x00\x00L\xc0\x00\x00\x00\x00\x00\x00J\xc0\x00\x00\x00\x00\x00\x00H\xc0\x00\x00\x00\x00\x00\x00F\xc0\x00\x00\x00\x00\x00\x00D\xc0\x00\x00\x00\x00\x00\x00B\xc0\x00\x00\x00\x00\x00\x00@\xc0\x00\x00\x00\x00\x00\x00<\xc0\x00\x00\x00\x00\x00\x008\xc0\x00\x00\x00\x00\x00\x004\xc0\x00\x00\x00\x00\x00\x000\xc0\x00\x00\x00\x00\x00\x00(\xc0\x00\x00\x00\x00\x00\x00 \xc0\x00\x00\x00\x00\x00\x00\x10\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10@\x00\x00\x00\x00\x00\x00 @\x00\x00\x00\x00\x00\x00(@\x00\x00\x00\x00\x00\x000@\x00\x00\x00\x00\x00\x004@\x00\x00\x00\x00\x00\x008@\x00\x00\x00\x00\x00\x00<@\x00\x00\x00\x00\x00\x00@@\x00\x00\x00\x00\x00\x00B@\x00\x00\x00\x00\x00\x00D@\x00\x00\x00\x00\x00\x00F@\x00\x00\x00\x00\x00\x00H@\x00\x00\x00\x00\x00\x00J@\x00\x00\x00\x00\x00\x00L@\x00\x00\x00\x00\x00\x00N@\x00\x00\x00\x00\x00\x00P@\x00\x00\x00\x00\x00\x00Q@\x00\x00\x00\x00\x00\x00R@\x00\x00\x00\x00\x00\x00S@\x00\x00\x00\x00\x00\x00T@\x00\x00\x00\x00\x00\x00U@\x00\x00\x00\x00\x00\x00V@\x00\x00\x00\x00\x00\x00W@\x00\x00\x00\x00\x00\x00X@\x00\x00\x00\x00\x00\x00Y@\x00\x00\x00\x00\x00\x00Z@\x00\x00\x00\x00\x00\x00[@\x00\x00\x00\x00\x00\x00\\@\x00\x00\x00\x00\x00\x00]@\x00\x00\x00\x00\x00\x00^@\x00\x00\x00\x00\x00\x00_@\x00\x00\x00\x00\x00\x00`@\x00\x00\x00\x00\x00\x80`@\x00\x00\x00\x00\x00\x00a@\x00\x00\x00\x00\x00\x80a@\x00\x00\x00\x00\x00\x00b@\x00\x00\x00\x00\x00\x80b@\x00\x00\x00\x00\x00\x00c@\x00\x00\x00\x00\x00\x80c@\x00\x00\x00\x00\x00\x00d@\x00\x00\x00\x00\x00\x80d@\x00\x00\x00\x00\x00\x00e@\x00\x00\x00\x00\x00\x80e@\x00\x00\x00\x00\x00\x00f@\x00\x00\x00\x00\x00\x80f@\x00\x00\x00\x00\x00\x00g@\x00\x00\x00\x00\x00\x80g@\x00\x00\x00\x00\x00\x00h@\x00\x00\x00\x00\x00\x80h@\x00\x00\x00\x00\x00\x00i@'
tbsS'tGuessSd'
p138
I20
sS'pdf'
p139
g12
(g13
(I0
tS'b'
tRp140
(I1
(I101
tg16
I00
S'e\xd3\x12\xbc\xcc\n8\'\x9c\xdc\xe2>4\xc4e\'3\xd9 \x94\xf2\xee\x92\'\xc9Iz\x82\x8b\xa5\xbf\'\xe0\x82\x04\'Fi\xe9\'\xdb6 -\xb4\x9a\x13(RqxZ\x0c\x10=(\xd3"\xdcQ\x90\xb2d(\xefS*\xca\x03S\x8c(\xd2z\xbf\xe7\xea\x9e\xb2(\xc5\x15\xf2\x91\xea\x85\xd7(\xf3\xd1\x8a\xcc\x08\x8d\xfc(X\xff\xdb\xd1\xb4\xa5 )\xf7Jw!\xe9\xa6B)-\x97\x02\x9d$\x14d)\xba\x13*\x02Y\xc4\x84)%E\x9ba\xfd\xa2\xa4)~u\xfb\xef\xfd\xb3\xc3)==\xf0\xc7\xf9\x12\xe2)k\x88\xee\x10\x05\xdc\xff)\xc4B\x89\x17~\xfa\x1a*\x8b\xa3O\xea\x13\xf35*\xe4\xf4\x01\x80c(Q*\xe6\xb7\xf8~\xbb\xc5i*\x11\xa0\xe77\xe0\x98\x82*\x93\xb4\xa3\x01k\xc9\x99*\x82j\xc9\x1eL-\xb1*\xd1\xfaf\xef\x7f\xfc\xc5*\r\x86\xff\x0f\xf0\t\xdb*\x89L\x8fZ\xd3\xf2\xef*vW\xaek\x81"\x02+\xa1\xaf\xea\xa0\xbf\xc7\x13+\xc5\xbf\x80,\xa5\xba$+\xc1\xac]\xb5"\xdf4+q%W\xa4\xf9\x94\xe9(\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
tbsS'response'
p141
(lp142
g19
(g24
S'\x01\x00\x00\x00'
tRp143
ag19
(g24
S'\x01\x00\x00\x00'
tRp144
ag19
(g24
S'\x01\x00\x00\x00'
tRp145
ag19
(g24
S'\x01\x00\x00\x00'
tRp146
ag19
(g24
S'\x00\x00\x00\x00'
tRp147
ag19
(g24
S'\x00\x00\x00\x00'
tRp148
ag19
(g24
S'\x00\x00\x00\x00'
tRp149
ag19
(g24
S'\x00\x00\x00\x00'
tRp150
ag19
(g24
S'\x00\x00\x00\x00'
tRp151
ag19
(g24
S'\x00\x00\x00\x00'
tRp152
ag19
(g24
S'\x00\x00\x00\x00'
tRp153
ag19
(g24
S'\x00\x00\x00\x00'
tRp154
ag19
(g24
S'\x01\x00\x00\x00'
tRp155
ag19
(g24
S'\x00\x00\x00\x00'
tRp156
ag19
(g24
S'\x01\x00\x00\x00'
tRp157
ag19
(g24
S'\x00\x00\x00\x00'
tRp158
ag19
(g24
S'\x01\x00\x00\x00'
tRp159
ag19
(g24
S'\x01\x00\x00\x00'
tRp160
ag19
(g24
S'\x01\x00\x00\x00'
tRp161
ag19
(g24
S'\x01\x00\x00\x00'
tRp162
ag19
(g24
S'\x00\x00\x00\x00'
tRp163
ag19
(g24
S'\x00\x00\x00\x00'
tRp164
ag19
(g24
S'\x01\x00\x00\x00'
tRp165
ag19
(g24
S'\x00\x00\x00\x00'
tRp166
ag19
(g24
S'\x01\x00\x00\x00'
tRp167
ag19
(g24
S'\x01\x00\x00\x00'
tRp168
ag19
(g24
S'\x00\x00\x00\x00'
tRp169
ag19
(g24
S'\x01\x00\x00\x00'
tRp170
ag19
(g24
S'\x00\x00\x00\x00'
tRp171
ag19
(g24
S'\x01\x00\x00\x00'
tRp172
ag19
(g24
S'\x01\x00\x00\x00'
tRp173
ag19
(g24
S'\x00\x00\x00\x00'
tRp174
ag19
(g24
S'\x00\x00\x00\x00'
tRp175
ag19
(g24
S'\x00\x00\x00\x00'
tRp176
ag19
(g24
S'\x00\x00\x00\x00'
tRp177
ag19
(g24
S'\x00\x00\x00\x00'
tRp178
ag19
(g24
S'\x01\x00\x00\x00'
tRp179
ag19
(g24
S'\x00\x00\x00\x00'
tRp180
ag19
(g24
S'\x00\x00\x00\x00'
tRp181
ag19
(g24
S'\x00\x00\x00\x00'
tRp182
ag19
(g24
S'\x01\x00\x00\x00'
tRp183
ag19
(g24
S'\x01\x00\x00\x00'
tRp184
ag19
(g24
S'\x01\x00\x00\x00'
tRp185
ag19
(g24
S'\x01\x00\x00\x00'
tRp186
ag19
(g24
S'\x00\x00\x00\x00'
tRp187
ag19
(g24
S'\x00\x00\x00\x00'
tRp188
ag19
(g24
S'\x01\x00\x00\x00'
tRp189
ag19
(g24
S'\x00\x00\x00\x00'
tRp190
ag19
(g24
S'\x01\x00\x00\x00'
tRp191
ag19
(g24
S'\x00\x00\x00\x00'
tRp192
ag19
(g24
S'\x01\x00\x00\x00'
tRp193
ag19
(g24
S'\x00\x00\x00\x00'
tRp194
ag19
(g24
S'\x00\x00\x00\x00'
tRp195
ag19
(g24
S'\x01\x00\x00\x00'
tRp196
ag19
(g24
S'\x01\x00\x00\x00'
tRp197
ag19
(g24
S'\x01\x00\x00\x00'
tRp198
ag19
(g24
S'\x01\x00\x00\x00'
tRp199
ag19
(g24
S'\x01\x00\x00\x00'
tRp200
ag19
(g24
S'\x00\x00\x00\x00'
tRp201
ag19
(g24
S'\x01\x00\x00\x00'
tRp202
ag19
(g24
S'\x01\x00\x00\x00'
tRp203
ag19
(g24
S'\x00\x00\x00\x00'
tRp204
ag19
(g24
S'\x01\x00\x00\x00'
tRp205
ag19
(g24
S'\x00\x00\x00\x00'
tRp206
ag19
(g24
S'\x01\x00\x00\x00'
tRp207
ag19
(g24
S'\x01\x00\x00\x00'
tRp208
ag19
(g24
S'\x00\x00\x00\x00'
tRp209
ag19
(g24
S'\x00\x00\x00\x00'
tRp210
ag19
(g24
S'\x01\x00\x00\x00'
tRp211
ag19
(g24
S'\x00\x00\x00\x00'
tRp212
ag19
(g24
S'\x01\x00\x00\x00'
tRp213
ag19
(g24
S'\x00\x00\x00\x00'
tRp214
ag19
(g24
S'\x01\x00\x00\x00'
tRp215
ag19
(g24
S'\x00\x00\x00\x00'
tRp216
ag19
(g24
S'\x01\x00\x00\x00'
tRp217
ag19
(g24
S'\x00\x00\x00\x00'
tRp218
ag19
(g24
S'\x01\x00\x00\x00'
tRp219
ag19
(g24
S'\x00\x00\x00\x00'
tRp220
ag19
(g24
S'\x00\x00\x00\x00'
tRp221
ag19
(g24
S'\x00\x00\x00\x00'
tRp222
ag19
(g24
S'\x00\x00\x00\x00'
tRp223
ag19
(g24
S'\x01\x00\x00\x00'
tRp224
ag19
(g24
S'\x00\x00\x00\x00'
tRp225
ag19
(g24
S'\x01\x00\x00\x00'
tRp226
ag19
(g24
S'\x01\x00\x00\x00'
tRp227
ag19
(g24
S'\x01\x00\x00\x00'
tRp228
ag19
(g24
S'\x00\x00\x00\x00'
tRp229
ag19
(g24
S'\x01\x00\x00\x00'
tRp230
ag19
(g24
S'\x00\x00\x00\x00'
tRp231
ag19
(g24
S'\x01\x00\x00\x00'
tRp232
ag19
(g24
S'\x01\x00\x00\x00'
tRp233
ag19
(g24
S'\x01\x00\x00\x00'
tRp234
ag19
(g24
S'\x01\x00\x00\x00'
tRp235
ag19
(g24
S'\x00\x00\x00\x00'
tRp236
ag19
(g24
S'\x01\x00\x00\x00'
tRp237
ag19
(g24
S'\x01\x00\x00\x00'
tRp238
ag19
(g24
S'\x00\x00\x00\x00'
tRp239
ag19
(g24
S'\x00\x00\x00\x00'
tRp240
asS'gamma'
p241
I0
sbsS'nDown'
p242
I3
sS'_exp'
p243
NsS'reversalIntensities'
p244
(lp245
sS'stepSizes'
p246
I4
sS'nUp'
p247
I1
sS'stopInterval'
p248
NsS'startVal'
p249
I82
sS'_questNextIntensity'
p250
I17
sS'_nextIntensity'
p251
I17
sS'_warnUseOfNext'
p252
I01
sS'method'
p253
S'quantile'
p254
sS'maxVal'
p255
I204
sS'stepSizeCurrent'
p256
I4
sS'correctCounter'
p257
I0
sS'nReversals'
p258
NsS'minVal'
p259
I17
sS'otherData'
p260
(dp261
S'direction'
p262
(lp263
I1
aI1
aI-1
aI1
aI-1
aI-1
aI1
aI-1
aI-1
aI1
aI1
aI1
aI-1
aI-1
aI-1
aI1
aI-1
aI-1
aI-1
aI-1
aI-1
aI-1
aI1
aI-1
aI-1
aI-1
aI-1
aI1
aI-1
aI1
aI-1
aI1
aI-1
aI1
aI-1
aI1
aI1
aI-1
aI1
aI1
aI-1
aI1
aI-1
aI1
aI-1
aI1
aI-1
aI-1
aI1
aI-1
aI1
aI1
aI1
aI1
aI-1
aI1
aI-1
aI1
aI-1
aI1
aI1
aI-1
aI-1
aI1
aI1
aI1
aI1
aI1
aI-1
aI-1
aI-1
aI1
aI-1
aI-1
aI-1
aI-1
aI-1
aI-1
aI1
aI-1
aI1
aI-1
aI-1
aI1
aI-1
aI-1
aI1
aI1
aI-1
aI-1
aI1
aI-1
aI-1
aI1
aI1
aI1
aI1
aI1
aI-1
asS'standardPosition'
p264
(lp265
S'left'
p266
aS'right'
p267
ag266
ag267
ag266
ag267
ag267
ag267
ag267
ag267
ag266
ag266
ag267
ag266
ag267
ag267
ag266
ag266
ag267
ag266
ag266
ag266
ag266
ag266
ag267
ag267
ag266
ag267
ag267
ag267
ag266
ag266
ag267
ag267
ag266
ag267
ag266
ag266
ag266
ag267
ag266
ag267
ag267
ag267
ag267
ag266
ag266
ag266
ag267
ag266
ag267
ag266
ag267
ag266
ag266
ag267
ag266
ag266
ag266
ag267
ag266
ag266
ag267
ag266
ag267
ag267
ag266
ag266
ag266
ag266
ag267
ag266
ag267
ag266
ag267
ag267
ag267
ag266
ag266
ag266
ag267
ag267
ag266
ag266
ag267
ag266
ag267
ag266
ag266
ag266
ag267
ag266
ag267
ag266
ag267
ag266
ag266
ag266
ag266
assS'finished'
p268
I00
sS'stepType'
p269
S'lin'
p270
sS'data'
p271
(lp272
g143
ag144
ag145
ag146
ag147
ag148
ag149
ag150
ag151
ag152
ag153
ag154
ag155
ag156
ag157
ag158
ag159
ag160
ag161
ag162
ag163
ag164
ag165
ag166
ag167
ag168
ag169
ag170
ag171
ag172
ag173
ag174
ag175
ag176
ag177
ag178
ag179
ag180
ag181
ag182
ag183
ag184
ag185
ag186
ag187
ag188
ag189
ag190
ag191
ag192
ag193
ag194
ag195
ag196
ag197
ag198
ag199
ag200
ag201
ag202
ag203
ag204
ag205
ag206
ag207
ag208
ag209
ag210
ag211
ag212
ag213
ag214
ag215
ag216
ag217
ag218
ag219
ag220
ag221
ag222
ag223
ag224
ag225
ag226
ag227
ag228
ag229
ag230
ag231
ag232
ag233
ag234
ag235
ag236
ag237
ag238
ag239
ag240
asS'reversalPoints'
p273
(lp274
sS'originPath'
p275
S'/Users/sarahmcintyre/ownCloud/Optacon Expts Sarah/Expt4_OptaconFingerTransferTMAE/sidewaysOptaconStim/fingerTransferTMAEexperiment.py'
p276
sS'name'
p277
S''
sS'extraInfo'
p278
NsS'currentDirection'
p279
S'start'
p280
sS'_variableStep'
p281
I00
sS'intensities'
p282
(lp283
g25
ag26
ag27
ag28
ag29
ag30
ag31
ag32
ag33
ag34
ag35
ag36
ag37
ag38
ag39
ag40
ag41
ag42
ag43
ag44
ag45
ag46
ag47
ag48
ag49
ag50
ag51
ag52
ag53
ag54
ag55
ag56
ag57
ag58
ag59
ag60
ag61
ag62
ag63
ag64
ag65
ag66
ag67
ag68
ag69
ag70
ag71
ag72
ag73
ag74
ag75
ag76
ag77
ag78
ag79
ag80
ag81
ag82
ag83
ag84
ag85
ag86
ag87
ag88
ag89
ag90
ag91
ag92
ag93
ag94
ag95
ag96
ag97
ag98
ag99
ag100
ag101
ag102
ag103
ag104
ag105
ag106
ag107
ag108
ag109
ag110
ag111
ag112
ag113
ag114
ag115
ag116
ag117
ag118
ag119
ag120
ag121
ag122
asS'initialRule'
p284
I0
sS'nTrials'
p285
I103
sS'thisTrialN'
p286
I97
sS'autoLog'
p287
I01
sb.